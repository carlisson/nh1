#!/bin/bash

shopt -s expand_aliases

# GLOBALS
_1VERSION=0.20

_1DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
_1RC="$_1DIR/$(basename "${BASH_SOURCE[0]}")"
if [ "$_1DIR" = "/usr/bin" ]
then
	_1LIB="/usr/share/nh1"
elif [ "$_1DIR" = "/usr/local/bin" ]
then
	_1LIB="/usr/local/share/nh1"
else
	_1LIB="$_1DIR/lib"
fi
_1LOCAL="$HOME/.nh1/local"
_1REMOTE="$HOME/.nh1/remote"
_1PLUS="$HOME/.nh1/plus"
_1COLOR=6
_1VERBOSE=1

#STARTING
mkdir -p "$_1LOCAL"
mkdir -p "$_1REMOTE"
mkdir -p "$_1PLUS"

# IMPORT MODULES
source "$_1LIB/audio.bashrc"
source "$_1LIB/network.bashrc"
source "$_1LIB/rpg.bashrc"

# Menu for NH1
function NH1 {

		PC=5
		XC=3
		WC=2

		echo " -------------------------------------"
		echo -n "            "
    1tint "NH1 $_1VERSION"
		echo
		echo " -------------------------------------"
    echo

		_nh1audio.menu
		_nh1network.menu
		_nh1rpg.menu

		1tint $PC "1du"
		echo
		1tint $PC "1install"
		echo
		1tint $WC "1bashrc"
		echo             "  Modify .bashrc to NH1 starts on bash start"
		1tint $XC "1clean"
		echo            "   Clean NH1 from memory (undo NH1 charge)"
		1tint $XC "1update"
		echo             "  Update your NH1, using git"
		1tint $WC "1version"
		echo              " List NH1 version and latest changes/updates"
		1tint $PC "nh1localnet"
		echo
		1tint $PC "nh1connect"
		echo
		1tint $PC "nh1interactive"
		echo

		1tint $WC "1tint"
		echo           "    Write a string in another color"

		echo
		echo -n "   "
		1tint $PC "planning"
		echo -n "   "
		1tint $XC "experimental"
		echo -n "   "
		1tint $WC "working"
		echo
		echo " -------------------------------------"
		echo "        Power-up for your shell"
		echo " -------------------------------------"
    echo
		unset PC XC WC
}

# Set text color in shell
# @param The color number (optional)
# @param Text to 1tint
function 1tint {
	if [ $# -eq 0 ]
	then
		echo "You need to put a string and a color number (optional)"
		1tint 0 "0 black"; echo
		1tint 1 "1 red"; echo
		1tint 2 "2 green"; echo
		1tint 3 "3 yellow"; echo
		1tint 4 "4 blue"; echo
		1tint 5 "5 magenta"; echo
		1tint 6 "6 cyan"; echo
		1tint 7 "7 white"; echo
		return 1
	fi
	if [ $# -eq 1 ]
	then
		COLOR=$_1COLOR
		MSG=$1
	else
		COLOR=$1
		MSG=$2
	fi
	tput setaf $COLOR
	echo -n $MSG
	tput sgr0
	unset COLOR MSG
	return 0
}
alias 1help=NH1


# Print only if NH1 is in verbose mode
# @param Message to print
function _1verb {
	if [ $_1VERBOSE -gt 0 ]
	then
		1tint ${FUNCNAME[ 1 ]}
		echo ": $1"
	fi
}


# Check if a program exists. Finish NH1 if it do not exists.
# @param Program to check
function 1check {
	if [ -z "$(whereis -u "$1")" ]
	then
		echo "Program $1 does not exist or it is unavailable for $USER."
		return 1
	fi
	return 0
}

# Modify ~/.bashrc to init NH1 on bash start
function 1bashrc {
    S1="source $_1RC"
    if grep "$S1" ~/.bashrc > /dev/null
    then
      echo "NH1 is already installed in your profile. Run NH1 to see all commands available."
    else
			echo -n "Installing NH1 in $HOME/.bashrc... "
    	echo "$S1" >> ~/.bashrc
			echo "Done!"
    fi
		unset S1
}

# Reload NH1 and all related modules
function 1refresh {
	LOCAL1RC=$_1RC
	_1verb "After destroy variables, I will load $_1RC."
	1clean
	source "$LOCAL1RC"
	_1verb "Done."
	unset LOCAL1RC
}

# Get git credentials to update NH1
function 1update {
	if 1check git
	then
		pushd "$_1LIB/.." || return 1
		git pull
		popd || return 2
		# shellcheck source=/dev/null
		1refresh
		1version
		echo
	fi
}


# List version software and list latest entries from changelog
function 1version {
	echo "NH1 $_1VERSION"
	echo
	tail "$_1LIB/changelog.txt"
}

# Clean all variables set by nh1
function 1clean {
	_1verb "Destroying all variables..."
	unset _1VERSION _1DIR _1RC _1LIB _1LOCAL _1REMOTE _1PLUS _1COLOR _1VERBOSE
	unalias 1help
	unset -f NH1 1tint _1verb 1check 1bashrc 1refresh 1update 1version 1clean
	_nh1audio.clean
	_nh1network.clean
	_nh1rpg.clean
}

#MAIN

# Try to execute a `return` statement,
# but do it in a sub-shell and catch the results.
# If this script isn't sourced, that will raise an error.
if return >/dev/null 2>&1
then
	S1="source $_1RC"
	if ! grep "$S1" ~/.bashrc > /dev/null
	then
    NH1
	fi
	unset S1
else
		echo "You need run:"
		echo "source $_1RC"
fi
